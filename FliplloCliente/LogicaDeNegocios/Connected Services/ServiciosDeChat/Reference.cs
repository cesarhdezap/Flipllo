//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LogicaDeNegocios.ServiciosDeChat {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Usuario", Namespace="http://schemas.datacontract.org/2004/07/ServiciosDeComunicacion")]
    [System.SerializableAttribute()]
    public partial class Usuario : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContraseñaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorreoElectronicoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreDeUsuarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LogicaDeNegocios.ServiciosDeChat.Sesion SesionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contraseña {
            get {
                return this.ContraseñaField;
            }
            set {
                if ((object.ReferenceEquals(this.ContraseñaField, value) != true)) {
                    this.ContraseñaField = value;
                    this.RaisePropertyChanged("Contraseña");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorreoElectronico {
            get {
                return this.CorreoElectronicoField;
            }
            set {
                if ((object.ReferenceEquals(this.CorreoElectronicoField, value) != true)) {
                    this.CorreoElectronicoField = value;
                    this.RaisePropertyChanged("CorreoElectronico");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreDeUsuario {
            get {
                return this.NombreDeUsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreDeUsuarioField, value) != true)) {
                    this.NombreDeUsuarioField = value;
                    this.RaisePropertyChanged("NombreDeUsuario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LogicaDeNegocios.ServiciosDeChat.Sesion Sesion {
            get {
                return this.SesionField;
            }
            set {
                if ((object.ReferenceEquals(this.SesionField, value) != true)) {
                    this.SesionField = value;
                    this.RaisePropertyChanged("Sesion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sesion", Namespace="http://schemas.datacontract.org/2004/07/ServiciosDeComunicacion")]
    [System.SerializableAttribute()]
    public partial class Sesion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Mensaje", Namespace="http://schemas.datacontract.org/2004/07/ServiciosDeComunicacion")]
    [System.SerializableAttribute()]
    public partial class Mensaje : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CuerpoDeMensajeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDDeUsuarioField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CuerpoDeMensaje {
            get {
                return this.CuerpoDeMensajeField;
            }
            set {
                if ((object.ReferenceEquals(this.CuerpoDeMensajeField, value) != true)) {
                    this.CuerpoDeMensajeField = value;
                    this.RaisePropertyChanged("CuerpoDeMensaje");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Fecha {
            get {
                return this.FechaField;
            }
            set {
                if ((this.FechaField.Equals(value) != true)) {
                    this.FechaField = value;
                    this.RaisePropertyChanged("Fecha");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IDDeUsuario {
            get {
                return this.IDDeUsuarioField;
            }
            set {
                if ((this.IDDeUsuarioField.Equals(value) != true)) {
                    this.IDDeUsuarioField = value;
                    this.RaisePropertyChanged("IDDeUsuario");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiciosDeChat.IServiciosDeChat", CallbackContract=typeof(LogicaDeNegocios.ServiciosDeChat.IServiciosDeChatCallback))]
    public interface IServiciosDeChat {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeChat/Conectar")]
        void Conectar(LogicaDeNegocios.ServiciosDeChat.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeChat/Conectar")]
        System.Threading.Tasks.Task ConectarAsync(LogicaDeNegocios.ServiciosDeChat.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeChat/Desconectar")]
        void Desconectar(int IDDeUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeChat/Desconectar")]
        System.Threading.Tasks.Task DesconectarAsync(int IDDeUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeChat/EnviarMensaje")]
        void EnviarMensaje(LogicaDeNegocios.ServiciosDeChat.Mensaje mensaje);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeChat/EnviarMensaje")]
        System.Threading.Tasks.Task EnviarMensajeAsync(LogicaDeNegocios.ServiciosDeChat.Mensaje mensaje);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiciosDeChatCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeChat/ActualizarListaDeUsuario")]
        void ActualizarListaDeUsuario(LogicaDeNegocios.ServiciosDeChat.Usuario[] usuariosConectados);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeChat/RecibirMensaje")]
        void RecibirMensaje(LogicaDeNegocios.ServiciosDeChat.Mensaje mensaje);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeChat/EnviarIDUsuario")]
        void EnviarIDUsuario(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiciosDeChatChannel : LogicaDeNegocios.ServiciosDeChat.IServiciosDeChat, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiciosDeChatClient : System.ServiceModel.DuplexClientBase<LogicaDeNegocios.ServiciosDeChat.IServiciosDeChat>, LogicaDeNegocios.ServiciosDeChat.IServiciosDeChat {
        
        public ServiciosDeChatClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServiciosDeChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServiciosDeChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiciosDeChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiciosDeChatClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Conectar(LogicaDeNegocios.ServiciosDeChat.Usuario usuario) {
            base.Channel.Conectar(usuario);
        }
        
        public System.Threading.Tasks.Task ConectarAsync(LogicaDeNegocios.ServiciosDeChat.Usuario usuario) {
            return base.Channel.ConectarAsync(usuario);
        }
        
        public void Desconectar(int IDDeUsuario) {
            base.Channel.Desconectar(IDDeUsuario);
        }
        
        public System.Threading.Tasks.Task DesconectarAsync(int IDDeUsuario) {
            return base.Channel.DesconectarAsync(IDDeUsuario);
        }
        
        public void EnviarMensaje(LogicaDeNegocios.ServiciosDeChat.Mensaje mensaje) {
            base.Channel.EnviarMensaje(mensaje);
        }
        
        public System.Threading.Tasks.Task EnviarMensajeAsync(LogicaDeNegocios.ServiciosDeChat.Mensaje mensaje) {
            return base.Channel.EnviarMensajeAsync(mensaje);
        }
    }
}
