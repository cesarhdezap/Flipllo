//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LogicaDeNegocios.ServiciosDeFlipllo {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Usuario", Namespace="http://schemas.datacontract.org/2004/07/LogicaDeNegocios.ClasesDeDominio")]
    [System.SerializableAttribute()]
    public partial class Usuario : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodigoDeVerificacionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContraseñaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorreoElectronicoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LogicaDeNegocios.ServiciosDeFlipllo.EstadoUsuario EstadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreDeUsuarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LogicaDeNegocios.ServiciosDeFlipllo.Puntuacion PuntuacionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodigoDeVerificacion {
            get {
                return this.CodigoDeVerificacionField;
            }
            set {
                if ((object.ReferenceEquals(this.CodigoDeVerificacionField, value) != true)) {
                    this.CodigoDeVerificacionField = value;
                    this.RaisePropertyChanged("CodigoDeVerificacion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contraseña {
            get {
                return this.ContraseñaField;
            }
            set {
                if ((object.ReferenceEquals(this.ContraseñaField, value) != true)) {
                    this.ContraseñaField = value;
                    this.RaisePropertyChanged("Contraseña");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorreoElectronico {
            get {
                return this.CorreoElectronicoField;
            }
            set {
                if ((object.ReferenceEquals(this.CorreoElectronicoField, value) != true)) {
                    this.CorreoElectronicoField = value;
                    this.RaisePropertyChanged("CorreoElectronico");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LogicaDeNegocios.ServiciosDeFlipllo.EstadoUsuario Estado {
            get {
                return this.EstadoField;
            }
            set {
                if ((this.EstadoField.Equals(value) != true)) {
                    this.EstadoField = value;
                    this.RaisePropertyChanged("Estado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreDeUsuario {
            get {
                return this.NombreDeUsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreDeUsuarioField, value) != true)) {
                    this.NombreDeUsuarioField = value;
                    this.RaisePropertyChanged("NombreDeUsuario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LogicaDeNegocios.ServiciosDeFlipllo.Puntuacion Puntuacion {
            get {
                return this.PuntuacionField;
            }
            set {
                if ((object.ReferenceEquals(this.PuntuacionField, value) != true)) {
                    this.PuntuacionField = value;
                    this.RaisePropertyChanged("Puntuacion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Puntuacion", Namespace="http://schemas.datacontract.org/2004/07/LogicaDeNegocios.ClasesDeDominio")]
    [System.SerializableAttribute()]
    public partial class Puntuacion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ExperienciaTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PartidasJugadasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VictoriasField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ExperienciaTotal {
            get {
                return this.ExperienciaTotalField;
            }
            set {
                if ((this.ExperienciaTotalField.Equals(value) != true)) {
                    this.ExperienciaTotalField = value;
                    this.RaisePropertyChanged("ExperienciaTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartidasJugadas {
            get {
                return this.PartidasJugadasField;
            }
            set {
                if ((this.PartidasJugadasField.Equals(value) != true)) {
                    this.PartidasJugadasField = value;
                    this.RaisePropertyChanged("PartidasJugadas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Victorias {
            get {
                return this.VictoriasField;
            }
            set {
                if ((this.VictoriasField.Equals(value) != true)) {
                    this.VictoriasField = value;
                    this.RaisePropertyChanged("Victorias");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EstadoUsuario", Namespace="http://schemas.datacontract.org/2004/07/LogicaDeNegocios.ClasesDeDominio")]
    public enum EstadoUsuario : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Indefinido = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inexistente = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CodigoDeValidacionNovalido = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Registrado = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ActualmenteConectado = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sesion", Namespace="http://schemas.datacontract.org/2004/07/ServiciosDeComunicacion.Interfaces.Interf" +
        "acesDeServiciosDeFlipllo")]
    [System.SerializableAttribute()]
    public partial class Sesion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreacionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UltimaActualizacionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LogicaDeNegocios.ServiciosDeFlipllo.Usuario UsuarioField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Creacion {
            get {
                return this.CreacionField;
            }
            set {
                if ((this.CreacionField.Equals(value) != true)) {
                    this.CreacionField = value;
                    this.RaisePropertyChanged("Creacion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UltimaActualizacion {
            get {
                return this.UltimaActualizacionField;
            }
            set {
                if ((this.UltimaActualizacionField.Equals(value) != true)) {
                    this.UltimaActualizacionField = value;
                    this.RaisePropertyChanged("UltimaActualizacion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LogicaDeNegocios.ServiciosDeFlipllo.Usuario Usuario {
            get {
                return this.UsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.UsuarioField, value) != true)) {
                    this.UsuarioField = value;
                    this.RaisePropertyChanged("Usuario");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Mensaje", Namespace="http://schemas.datacontract.org/2004/07/ServiciosDeComunicacion.Interfaces.Interf" +
        "acesDeServiciosDeFlipllo")]
    [System.SerializableAttribute()]
    public partial class Mensaje : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CuerpoDeMensajeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreDeUsuarioField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CuerpoDeMensaje {
            get {
                return this.CuerpoDeMensajeField;
            }
            set {
                if ((object.ReferenceEquals(this.CuerpoDeMensajeField, value) != true)) {
                    this.CuerpoDeMensajeField = value;
                    this.RaisePropertyChanged("CuerpoDeMensaje");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Fecha {
            get {
                return this.FechaField;
            }
            set {
                if ((this.FechaField.Equals(value) != true)) {
                    this.FechaField = value;
                    this.RaisePropertyChanged("Fecha");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreDeUsuario {
            get {
                return this.NombreDeUsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreDeUsuarioField, value) != true)) {
                    this.NombreDeUsuarioField = value;
                    this.RaisePropertyChanged("NombreDeUsuario");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sala", Namespace="http://schemas.datacontract.org/2004/07/ServiciosDeComunicacion.Interfaces")]
    [System.SerializableAttribute()]
    public partial class Sala : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LogicaDeNegocios.ServiciosDeFlipllo.EstadoSala EstadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LogicaDeNegocios.ServiciosDeFlipllo.Jugador[] JugadoresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NivelMaximoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NivelMinimoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreDeUsuarioCreadorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LogicaDeNegocios.ServiciosDeFlipllo.EstadoSala Estado {
            get {
                return this.EstadoField;
            }
            set {
                if ((this.EstadoField.Equals(value) != true)) {
                    this.EstadoField = value;
                    this.RaisePropertyChanged("Estado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LogicaDeNegocios.ServiciosDeFlipllo.Jugador[] Jugadores {
            get {
                return this.JugadoresField;
            }
            set {
                if ((object.ReferenceEquals(this.JugadoresField, value) != true)) {
                    this.JugadoresField = value;
                    this.RaisePropertyChanged("Jugadores");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NivelMaximo {
            get {
                return this.NivelMaximoField;
            }
            set {
                if ((this.NivelMaximoField.Equals(value) != true)) {
                    this.NivelMaximoField = value;
                    this.RaisePropertyChanged("NivelMaximo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NivelMinimo {
            get {
                return this.NivelMinimoField;
            }
            set {
                if ((this.NivelMinimoField.Equals(value) != true)) {
                    this.NivelMinimoField = value;
                    this.RaisePropertyChanged("NivelMinimo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreDeUsuarioCreador {
            get {
                return this.NombreDeUsuarioCreadorField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreDeUsuarioCreadorField, value) != true)) {
                    this.NombreDeUsuarioCreadorField = value;
                    this.RaisePropertyChanged("NombreDeUsuarioCreador");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EstadoSala", Namespace="http://schemas.datacontract.org/2004/07/ServiciosDeComunicacion.Interfaces")]
    public enum EstadoSala : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inexistente = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Registrada = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnPartida = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CupoLleno = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Jugador", Namespace="http://schemas.datacontract.org/2004/07/ServiciosDeComunicacion.Interfaces")]
    [System.SerializableAttribute()]
    public partial class Jugador : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LogicaDeNegocios.ServiciosDeFlipllo.ColorDeFicha ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ListoParaJugarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LogicaDeNegocios.ServiciosDeFlipllo.Sesion SesionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LogicaDeNegocios.ServiciosDeFlipllo.ColorDeFicha Color {
            get {
                return this.ColorField;
            }
            set {
                if ((this.ColorField.Equals(value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ListoParaJugar {
            get {
                return this.ListoParaJugarField;
            }
            set {
                if ((this.ListoParaJugarField.Equals(value) != true)) {
                    this.ListoParaJugarField = value;
                    this.RaisePropertyChanged("ListoParaJugar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LogicaDeNegocios.ServiciosDeFlipllo.Sesion Sesion {
            get {
                return this.SesionField;
            }
            set {
                if ((object.ReferenceEquals(this.SesionField, value) != true)) {
                    this.SesionField = value;
                    this.RaisePropertyChanged("Sesion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ColorDeFicha", Namespace="http://schemas.datacontract.org/2004/07/")]
    public enum ColorDeFicha : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Negro = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Blanco = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ninguno = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiciosDeFlipllo.IServiciosDeFlipllo", CallbackContract=typeof(LogicaDeNegocios.ServiciosDeFlipllo.IServiciosDeFliplloCallback))]
    public interface IServiciosDeFlipllo {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/AutenticarUsuario")]
        void AutenticarUsuario(LogicaDeNegocios.ServiciosDeFlipllo.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/AutenticarUsuario")]
        System.Threading.Tasks.Task AutenticarUsuarioAsync(LogicaDeNegocios.ServiciosDeFlipllo.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosDeFlipllo/RegistrarUsuario", ReplyAction="http://tempuri.org/IServiciosDeFlipllo/RegistrarUsuarioResponse")]
        bool RegistrarUsuario(LogicaDeNegocios.ServiciosDeFlipllo.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosDeFlipllo/RegistrarUsuario", ReplyAction="http://tempuri.org/IServiciosDeFlipllo/RegistrarUsuarioResponse")]
        System.Threading.Tasks.Task<bool> RegistrarUsuarioAsync(LogicaDeNegocios.ServiciosDeFlipllo.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosDeFlipllo/ValidarCodigoDeUsuario", ReplyAction="http://tempuri.org/IServiciosDeFlipllo/ValidarCodigoDeUsuarioResponse")]
        bool ValidarCodigoDeUsuario(LogicaDeNegocios.ServiciosDeFlipllo.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosDeFlipllo/ValidarCodigoDeUsuario", ReplyAction="http://tempuri.org/IServiciosDeFlipllo/ValidarCodigoDeUsuarioResponse")]
        System.Threading.Tasks.Task<bool> ValidarCodigoDeUsuarioAsync(LogicaDeNegocios.ServiciosDeFlipllo.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/ActualizarSesion")]
        void ActualizarSesion(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/ActualizarSesion")]
        System.Threading.Tasks.Task ActualizarSesionAsync(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/CerrarSesion")]
        void CerrarSesion(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/CerrarSesion")]
        System.Threading.Tasks.Task CerrarSesionAsync(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/EnviarMensaje")]
        void EnviarMensaje(LogicaDeNegocios.ServiciosDeFlipllo.Mensaje mensaje, LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/EnviarMensaje")]
        System.Threading.Tasks.Task EnviarMensajeAsync(LogicaDeNegocios.ServiciosDeFlipllo.Mensaje mensaje, LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosDeFlipllo/CrearSala", ReplyAction="http://tempuri.org/IServiciosDeFlipllo/CrearSalaResponse")]
        LogicaDeNegocios.ServiciosDeFlipllo.Sala CrearSala(LogicaDeNegocios.ServiciosDeFlipllo.Sala sala, LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion, LogicaDeNegocios.ServiciosDeFlipllo.ColorDeFicha color);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosDeFlipllo/CrearSala", ReplyAction="http://tempuri.org/IServiciosDeFlipllo/CrearSalaResponse")]
        System.Threading.Tasks.Task<LogicaDeNegocios.ServiciosDeFlipllo.Sala> CrearSalaAsync(LogicaDeNegocios.ServiciosDeFlipllo.Sala sala, LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion, LogicaDeNegocios.ServiciosDeFlipllo.ColorDeFicha color);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosDeFlipllo/SolicitarSalas", ReplyAction="http://tempuri.org/IServiciosDeFlipllo/SolicitarSalasResponse")]
        LogicaDeNegocios.ServiciosDeFlipllo.Sala[] SolicitarSalas(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosDeFlipllo/SolicitarSalas", ReplyAction="http://tempuri.org/IServiciosDeFlipllo/SolicitarSalasResponse")]
        System.Threading.Tasks.Task<LogicaDeNegocios.ServiciosDeFlipllo.Sala[]> SolicitarSalasAsync(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/IngresarASala")]
        void IngresarASala(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion, LogicaDeNegocios.ServiciosDeFlipllo.Sala sala);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/IngresarASala")]
        System.Threading.Tasks.Task IngresarASalaAsync(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion, LogicaDeNegocios.ServiciosDeFlipllo.Sala sala);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/DesconectarDeSala")]
        void DesconectarDeSala(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/DesconectarDeSala")]
        System.Threading.Tasks.Task DesconectarDeSalaAsync(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/CambiarColorDeJugadorEnSala")]
        void CambiarColorDeJugadorEnSala(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion, LogicaDeNegocios.ServiciosDeFlipllo.ColorDeFicha color);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/CambiarColorDeJugadorEnSala")]
        System.Threading.Tasks.Task CambiarColorDeJugadorEnSalaAsync(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion, LogicaDeNegocios.ServiciosDeFlipllo.ColorDeFicha color);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/CambiarConfiguracionDeLaSala")]
        void CambiarConfiguracionDeLaSala(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion, LogicaDeNegocios.ServiciosDeFlipllo.Sala sala);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/CambiarConfiguracionDeLaSala")]
        System.Threading.Tasks.Task CambiarConfiguracionDeLaSalaAsync(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion, LogicaDeNegocios.ServiciosDeFlipllo.Sala sala);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/AlternarListoParaJugar")]
        void AlternarListoParaJugar(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/AlternarListoParaJugar")]
        System.Threading.Tasks.Task AlternarListoParaJugarAsync(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosDeFlipllo/IniciarJuego", ReplyAction="http://tempuri.org/IServiciosDeFlipllo/IniciarJuegoResponse")]
        bool IniciarJuego(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiciosDeFlipllo/IniciarJuego", ReplyAction="http://tempuri.org/IServiciosDeFlipllo/IniciarJuegoResponse")]
        System.Threading.Tasks.Task<bool> IniciarJuegoAsync(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/CambiarSkinDeFicha")]
        void CambiarSkinDeFicha(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion, string nombreSkin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/CambiarSkinDeFicha")]
        System.Threading.Tasks.Task CambiarSkinDeFichaAsync(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion, string nombreSkin);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiciosDeFliplloCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/RecibirMensaje")]
        void RecibirMensaje(LogicaDeNegocios.ServiciosDeFlipllo.Mensaje mensaje);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/RecibirSalaCreada")]
        void RecibirSalaCreada(LogicaDeNegocios.ServiciosDeFlipllo.Sala sala);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/ActualizarSala")]
        void ActualizarSala(LogicaDeNegocios.ServiciosDeFlipllo.Sala sala);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/JuegoIniciado")]
        void JuegoIniciado();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/SkinDeOponenteActualizada")]
        void SkinDeOponenteActualizada(string skinNueva);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/SalaBorrada")]
        void SalaBorrada();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/ColorDeJugadorActualizado")]
        void ColorDeJugadorActualizado();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/RecibirSesion")]
        void RecibirSesion(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiciosDeFlipllo/PedirActualizarSesion")]
        void PedirActualizarSesion();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiciosDeFliplloChannel : LogicaDeNegocios.ServiciosDeFlipllo.IServiciosDeFlipllo, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiciosDeFliplloClient : System.ServiceModel.DuplexClientBase<LogicaDeNegocios.ServiciosDeFlipllo.IServiciosDeFlipllo>, LogicaDeNegocios.ServiciosDeFlipllo.IServiciosDeFlipllo {
        
        public ServiciosDeFliplloClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServiciosDeFliplloClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServiciosDeFliplloClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiciosDeFliplloClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiciosDeFliplloClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void AutenticarUsuario(LogicaDeNegocios.ServiciosDeFlipllo.Usuario usuario) {
            base.Channel.AutenticarUsuario(usuario);
        }
        
        public System.Threading.Tasks.Task AutenticarUsuarioAsync(LogicaDeNegocios.ServiciosDeFlipllo.Usuario usuario) {
            return base.Channel.AutenticarUsuarioAsync(usuario);
        }
        
        public bool RegistrarUsuario(LogicaDeNegocios.ServiciosDeFlipllo.Usuario usuario) {
            return base.Channel.RegistrarUsuario(usuario);
        }
        
        public System.Threading.Tasks.Task<bool> RegistrarUsuarioAsync(LogicaDeNegocios.ServiciosDeFlipllo.Usuario usuario) {
            return base.Channel.RegistrarUsuarioAsync(usuario);
        }
        
        public bool ValidarCodigoDeUsuario(LogicaDeNegocios.ServiciosDeFlipllo.Usuario usuario) {
            return base.Channel.ValidarCodigoDeUsuario(usuario);
        }
        
        public System.Threading.Tasks.Task<bool> ValidarCodigoDeUsuarioAsync(LogicaDeNegocios.ServiciosDeFlipllo.Usuario usuario) {
            return base.Channel.ValidarCodigoDeUsuarioAsync(usuario);
        }
        
        public void ActualizarSesion(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion) {
            base.Channel.ActualizarSesion(sesion);
        }
        
        public System.Threading.Tasks.Task ActualizarSesionAsync(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion) {
            return base.Channel.ActualizarSesionAsync(sesion);
        }
        
        public void CerrarSesion(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion) {
            base.Channel.CerrarSesion(sesion);
        }
        
        public System.Threading.Tasks.Task CerrarSesionAsync(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion) {
            return base.Channel.CerrarSesionAsync(sesion);
        }
        
        public void EnviarMensaje(LogicaDeNegocios.ServiciosDeFlipllo.Mensaje mensaje, LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion) {
            base.Channel.EnviarMensaje(mensaje, sesion);
        }
        
        public System.Threading.Tasks.Task EnviarMensajeAsync(LogicaDeNegocios.ServiciosDeFlipllo.Mensaje mensaje, LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion) {
            return base.Channel.EnviarMensajeAsync(mensaje, sesion);
        }
        
        public LogicaDeNegocios.ServiciosDeFlipllo.Sala CrearSala(LogicaDeNegocios.ServiciosDeFlipllo.Sala sala, LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion, LogicaDeNegocios.ServiciosDeFlipllo.ColorDeFicha color) {
            return base.Channel.CrearSala(sala, sesion, color);
        }
        
        public System.Threading.Tasks.Task<LogicaDeNegocios.ServiciosDeFlipllo.Sala> CrearSalaAsync(LogicaDeNegocios.ServiciosDeFlipllo.Sala sala, LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion, LogicaDeNegocios.ServiciosDeFlipllo.ColorDeFicha color) {
            return base.Channel.CrearSalaAsync(sala, sesion, color);
        }
        
        public LogicaDeNegocios.ServiciosDeFlipllo.Sala[] SolicitarSalas(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion) {
            return base.Channel.SolicitarSalas(sesion);
        }
        
        public System.Threading.Tasks.Task<LogicaDeNegocios.ServiciosDeFlipllo.Sala[]> SolicitarSalasAsync(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion) {
            return base.Channel.SolicitarSalasAsync(sesion);
        }
        
        public void IngresarASala(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion, LogicaDeNegocios.ServiciosDeFlipllo.Sala sala) {
            base.Channel.IngresarASala(sesion, sala);
        }
        
        public System.Threading.Tasks.Task IngresarASalaAsync(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion, LogicaDeNegocios.ServiciosDeFlipllo.Sala sala) {
            return base.Channel.IngresarASalaAsync(sesion, sala);
        }
        
        public void DesconectarDeSala(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion) {
            base.Channel.DesconectarDeSala(sesion);
        }
        
        public System.Threading.Tasks.Task DesconectarDeSalaAsync(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion) {
            return base.Channel.DesconectarDeSalaAsync(sesion);
        }
        
        public void CambiarColorDeJugadorEnSala(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion, LogicaDeNegocios.ServiciosDeFlipllo.ColorDeFicha color) {
            base.Channel.CambiarColorDeJugadorEnSala(sesion, color);
        }
        
        public System.Threading.Tasks.Task CambiarColorDeJugadorEnSalaAsync(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion, LogicaDeNegocios.ServiciosDeFlipllo.ColorDeFicha color) {
            return base.Channel.CambiarColorDeJugadorEnSalaAsync(sesion, color);
        }
        
        public void CambiarConfiguracionDeLaSala(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion, LogicaDeNegocios.ServiciosDeFlipllo.Sala sala) {
            base.Channel.CambiarConfiguracionDeLaSala(sesion, sala);
        }
        
        public System.Threading.Tasks.Task CambiarConfiguracionDeLaSalaAsync(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion, LogicaDeNegocios.ServiciosDeFlipllo.Sala sala) {
            return base.Channel.CambiarConfiguracionDeLaSalaAsync(sesion, sala);
        }
        
        public void AlternarListoParaJugar(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion) {
            base.Channel.AlternarListoParaJugar(sesion);
        }
        
        public System.Threading.Tasks.Task AlternarListoParaJugarAsync(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion) {
            return base.Channel.AlternarListoParaJugarAsync(sesion);
        }
        
        public bool IniciarJuego(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion) {
            return base.Channel.IniciarJuego(sesion);
        }
        
        public System.Threading.Tasks.Task<bool> IniciarJuegoAsync(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion) {
            return base.Channel.IniciarJuegoAsync(sesion);
        }
        
        public void CambiarSkinDeFicha(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion, string nombreSkin) {
            base.Channel.CambiarSkinDeFicha(sesion, nombreSkin);
        }
        
        public System.Threading.Tasks.Task CambiarSkinDeFichaAsync(LogicaDeNegocios.ServiciosDeFlipllo.Sesion sesion, string nombreSkin) {
            return base.Channel.CambiarSkinDeFichaAsync(sesion, nombreSkin);
        }
    }
}
